# ============================================
# NFLIX Health Monitor - Environment Variables
# ============================================
# Copiez ce fichier vers .env et remplissez les valeurs

# ============================================
# SUPABASE CONFIGURATION
# ============================================
SUPABASE_URL=https://votre-projet.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# ============================================
# API KEYS - SERVICES EXTERNES
# ============================================

# OpenAI API Key
OPENAI_API_KEY=sk-...

# Anthropic API Key
ANTHROPIC_API_KEY=sk-ant-...

# Shotstack API Key
SHOTSTACK_API_KEY=...

# Resend API Key
RESEND_API_KEY=re_...

# ============================================
# ALERTES - TELEGRAM
# ============================================

# Telegram Bot Token (obtenu via @BotFather)
TELEGRAM_BOT_TOKEN=123456789:ABCdefGHIjklMNOpqrsTUVwxyz...

# Telegram Chat ID pour recevoir les alertes
# Pour obtenir votre chat ID:
# 1. Envoyez un message à votre bot
# 2. Visitez: https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates
# 3. Cherchez "chat":{"id": votre_id
TELEGRAM_ALERT_CHAT_ID=-1001234567890

# ============================================
# ALERTES - EMAIL
# ============================================

# Email expéditeur pour les alertes
ALERT_FROM_EMAIL=alerts@nflix.app

# Email(s) destinataire(s) pour les alertes (séparés par des virgules)
ALERT_TO_EMAIL=team@nflix.app,admin@nflix.app

# ============================================
# SMTP CONFIGURATION (pour l'envoi d'emails)
# ============================================

# SMTP Host
SMTP_HOST=smtp.gmail.com

# SMTP Port (587 pour TLS, 465 pour SSL)
SMTP_PORT=587

# SMTP User
SMTP_USER=votre-email@gmail.com

# SMTP Password
SMTP_PASSWORD=votre-mot-de-passe-app

# SMTP Secure (true pour SSL, false pour TLS)
SMTP_SECURE=false

# ============================================
# MONITORING CONFIGURATION
# ============================================

# Fréquence de vérification en minutes (défaut: 5)
HEALTH_CHECK_INTERVAL=5

# Seuil pour détecter les jobs bloqués en secondes (défaut: 3600 = 1 heure)
STUCK_JOB_THRESHOLD=3600

# Seuil d'alerte pour l'utilisation du stockage en pourcentage (défaut: 80)
STORAGE_ALERT_THRESHOLD=80

# Seuil critique pour l'utilisation du stockage en pourcentage (défaut: 90)
STORAGE_CRITICAL_THRESHOLD=90

# Nombre d'erreurs par heure avant alerte (défaut: 10)
ERROR_RATE_THRESHOLD=10

# Temps de réponse max de la DB en ms avant alerte (défaut: 1000)
DB_RESPONSE_THRESHOLD=1000

# Temps de réponse critique de la DB en ms (défaut: 3000)
DB_RESPONSE_CRITICAL=3000

# ============================================
# WEBHOOK CONFIGURATION (optionnel)
# ============================================

# Webhook URL pour notifications personnalisées
# WEBHOOK_URL=https://hooks.slack.com/services/...

# ============================================
# AUTRES SERVICES (optionnel)
# ============================================

# Sentry DSN pour tracking des erreurs
# SENTRY_DSN=https://...@sentry.io/...

# DataDog API Key pour métriques
# DATADOG_API_KEY=...

# ============================================
# NOTES
# ============================================
#
# 1. SÉCURITÉ:
#    - Ne jamais committer ce fichier avec de vraies valeurs
#    - Utiliser des secrets managers en production
#    - Rotationner régulièrement les clés API
#
# 2. CONFIGURATION N8N:
#    - Ces variables doivent être configurées dans n8n
#    - Menu: Settings > Environment Variables
#    - Ou dans le fichier docker-compose si vous utilisez Docker
#
# 3. TELEGRAM SETUP:
#    - Créer un bot: /newbot via @BotFather
#    - Obtenir le token
#    - Ajouter le bot à votre groupe/channel
#    - Donner les permissions d'admin au bot
#
# 4. SMTP GMAIL:
#    - Activer l'authentification à 2 facteurs
#    - Générer un "App Password"
#    - Utiliser ce mot de passe au lieu du mot de passe principal
#
# 5. TESTING:
#    - Tester chaque service individuellement avant d'activer le workflow
#    - Utiliser le mode "Execute Node" dans n8n pour débugger
#
